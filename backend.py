from fastapi import FastAPI
from pydantic import BaseModel, Field

import base64
from PIL import Image
from io import BytesIO
from enum import Enum

from models.pretrained import PretrainedModel

pretrained_model = PretrainedModel()


# All models available
class ModelName(str, Enum):
    pretrained = "pretrained"
    trained = "trained"


# Expected Body definition
class TargetImage(BaseModel):
    filename: str = Field(description="File name")
    content: str = Field(description="Image content encoded base64")


app = FastAPI()


@app.get("/")
async def root():
    return {"message": "Be My Eyes API is running"}


@app.post(
    "/inference",
    summary="Get image caption",
    description="Retrieve the caption for a specified image from a designated model",
)
async def inference(model_name: ModelName, image: TargetImage):
    img = Image.open(BytesIO(base64.b64decode(image.content)))

    if model_name == "pretrained":
        caption = pretrained_model.inference(img)
    else:
        caption = "CAPTION  GENERATED BY MODEL, RESPONSE FROM THE API."

    return {"caption": caption}
